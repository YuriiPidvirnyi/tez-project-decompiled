version: '3.8'

services:
  tez-console-prod:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tez-console-prod
    ports:
      - "80:8080"
      - "443:8443"
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./certs:/app/certs:ro
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DOTNET_ENVIRONMENT=Production
      - ASPNETCORE_URLS=https://+:8443;http://+:8080
      - ASPNETCORE_Kestrel__Certificates__Default__Password=secure_password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/certs/tez-project.pfx
    networks:
      - tez-prod-network
    restart: unless-stopped
    depends_on:
      - database-prod
      - redis-prod
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G

  database-prod:
    image: postgres:15-alpine
    container_name: tez-database-prod
    environment:
      - POSTGRES_DB=tez_db_prod
      - POSTGRES_USER=tez_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ./sql/init-prod.sql:/docker-entrypoint-initdb.d/init.sql
      - ./backups:/backups
    networks:
      - tez-prod-network
    restart: unless-stopped
    secrets:
      - db_password
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  redis-prod:
    image: redis:7-alpine
    container_name: tez-redis-prod
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    volumes:
      - redis_prod_data:/data
    networks:
      - tez-prod-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  nginx:
    image: nginx:alpine
    container_name: tez-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - tez-console-prod
    networks:
      - tez-prod-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: tez-prometheus-prod
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - tez-prod-network
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'

  grafana:
    image: grafana/grafana:latest
    container_name: tez-grafana-prod
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD_FILE=/run/secrets/grafana_password
      - GF_SECURITY_COOKIE_SECURE=true
      - GF_SECURITY_STRICT_TRANSPORT_SECURITY=true
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - tez-prod-network
    restart: unless-stopped
    secrets:
      - grafana_password
    depends_on:
      - prometheus

  filebeat:
    image: elastic/filebeat:8.8.0
    container_name: tez-filebeat
    user: root
    volumes:
      - ./logs:/var/log/app:ro
      - ./monitoring/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - tez-prod-network
    restart: unless-stopped
    depends_on:
      - tez-console-prod

secrets:
  db_password:
    file: ./secrets/db_password.txt
  grafana_password:
    file: ./secrets/grafana_password.txt

volumes:
  postgres_prod_data:
  redis_prod_data:
  prometheus_data:
  grafana_data:

networks:
  tez-prod-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
